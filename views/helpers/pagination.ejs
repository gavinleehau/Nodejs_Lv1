

<% PaginationHelpers = (paginationObj, type, currentStatus, keyword) => {  <!--type để tiện thay cho cái tên vì sau này xài nhiều -->
	let totalItems = paginationObj.totalItems;   <!-- tổng items -->
	let totalItemsPerPage = paginationObj.totalItemsPerPage;   <!-- số items/ trang -->
	let totalPages = Math.ceil(totalItems/totalItemsPerPage);   <!-- (Tổng pages = Tổng items / items từng trang) ceil là làm tròn -->
	let currentPage = paginationObj.currentPage;   <!-- truy xuât đến currentPage -->
	let pageRanges = paginationObj.pageRanges;  
	let xhtmlPagination = '';  
	let to = totalItemsPerPage * currentPage;  <!-- số trang đến = số items/trang * trang hiện hành -->
	let from = to - totalItemsPerPage + 1;     <!-- số trang từ  = số trang đến - số items/trang + 1 -->
	if (to > totalItems) to = totalItems;   <!-- Nếu số trang đến > tổng số items thì số trang đến = tổng số items -->

	if(totalPages > 1) {
		let xhtmlstart 	    = '<li><a class="page-link disabled"> <i class="fas fa-angle-double-left"></i> </a></li>';  <!-- Nếu muốn n1o vẫn hiện nhưng "disabled" thì gán giá trị '<li class="disabled"><a> Start </a></li>' cho nó -->
		let xhtmlPrevious   = '<li><a class="page-link disabled"> <i class="fas fa-angle-left"></i> </a></li>';
		let xhtmlPages      = '';
		let xhtmlNext       = '<li><a class="page-link disabled"> <i class="fas fa-angle-right"></i> </a></li>';
		let xhtmlEnd        = '<li><a class="page-link disabled"> <i class="fas fa-angle-double-right"> </i></a></li>';

		let link = systemConfig.prefixAdmin + '/' + type + '/' + currentStatus;
		if( keyword !== '' ) link += '?keyword=' + keyword + '&page=';
		else link += '?page=';

		if(currentPage > 1) {
			xhtmlstart    = `<li><a class="page-link " href="${link}1"> <i class="fas fa-angle-double-left"></i> </a></li>`;
			xhtmlPrevious = `<li><a class="page-link " href=" ${link}${currentPage -1} "> <i class="fas fa-angle-left"></i> </a></li>`;
		}
		
		if(currentPage < totalPages) {
			xhtmlNext     = `<li><a class="page-link " href=" ${link}${currentPage +1} "> <i class="fas fa-angle-right"></i> </a></li>`;
			xhtmlEnd      = `<li><a class="page-link " href=" ${link}${totalPages} "> <i class="fas fa-angle-double-right"> </i></a></li>`;
		}


		let numberMiddle = Math.ceil(pageRanges/2);
		let min = currentPage - numberMiddle +1;
		let max = min + pageRanges -1 ;

		if(min <=1 ){
			min = 1;
			max = pageRanges;
		}

		if(max >= totalPages ){
			max = totalPages; 
			<!-- min = ((max - pageRanges +1) >= 1) ? (max - pageRanges +1) : 1 ; -->
			min = ((max - pageRanges +1) <= 1) ? 1: max - pageRanges +1 ;
		}
		
		for(let i = min; i <= max; i++ ) {
			if(i == currentPage) {
				xhtmlPages += `<li class="page-item active"><a class="page-link">${i}</a></li>`; 
			} else {
				xhtmlPages += `<li><a class="page-link" href="${link}${i}"> ${i} </a></li>`; <!-- vì nó cứ tiếp tuc65 nối 1,2,3.. nên phải là += -->
			}
		}

		xhtmlPagination = '<ul class="pagination pagination-sm m-0 float-right">' + xhtmlstart + xhtmlPrevious + xhtmlPages + xhtmlNext + xhtmlEnd + '</ul>';
	}


	return `<div class="panel panel-info" id="pagination">
				<div class="panel-heading">
					Pagination
					<span class="label label-warning">Total pages: ${totalPages}</span>
					<span class="label label-danger">Total entries: ${totalItems}</span>
				</div>

				<div class="panel-body">
					<div class="infor-pagination">
						<p>Number of elements on the page: <span>${totalItemsPerPage}</span></p>
						<p>Showing <span> ${from} </span> to <span> ${to} </span> of <span>${totalItems}</span> entries</p>
					</div>
					<div class="ad-pagination">
						${xhtmlPagination}
					</div>
				</div>
			</div>`;
	}
    
%>
        






 


